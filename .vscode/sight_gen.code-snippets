{
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"DoNotCompile flag": {
		"description": "Heading comment line for flaging the file to not compile directly",
		"prefix": "flag-no-direct-compile",
		"body": [
			"// SCRIPT_DO_NOT_DIRECTLY_COMPILE"
		]
	},

	"CompileToSpecificDir flag": {
		"description": "Heading comment line for flaging the file to be compiled to given sight dir",
		"prefix": "flag-compile-to",
		"body": [
			"// SCRIPT_COMPILE_TO=${0:targetSightDir}"
		]
	},

	"Sight file initialization": {
		"description": "Create a sight code template (V1)",
		"scope": "javascript,typescript",
		"prefix": "init-sight",
		"body": [
			"import Sight from \"${1:..}/_lib2/sight_main.js\";",
			"import Toolbox from \"${1:..}/_lib2/sight_toolbox.js\";",
			"import { Quad, Circle, Line, TextSnippet } from \"${1:..}/_lib2/sight_elements.js\";",
			"import * as pd from \"${1:..}/_lib2/predefined.js\";",
			"",
			"",
			"let sight = new Sight();",
			"$0",
			"",
			"//// BASIC SETTINGS ////",
			"// sight.addSettings(pd.concatAllBasics(/*TODO*/));",
			"",
			"",
			"//// VEHICLE TYPES ////",
			"// sight.matchVehicle(/*TODO*/);",
			"",
			"",
			"//// SHELL DISTANCES ////",
			"// sight.addShellDistance(/*TODO*/);",
			"",
			"",
			"//// SIGHT DESIGNS ////",
			"/*TODO*/",
			"",
			"",
			"",
			"",
			"//// OUTPUT ////",
			"sight.printCode();",
			"",
		]
	},

	"Add a new circle": {
		"prefix": "new-circle",
		"body": "new Circle({ $0 })"
	},

	"Add a new line": {
		"prefix": "new-line",
		"body": "new Line({ from: [$1], to: [$2] })"
	},

	"Add a new text": {
		"prefix": "new-text",
		"body": "new TextSnippet({ text: \"$1\", pos: [$2], size: $3 })"
	}

}